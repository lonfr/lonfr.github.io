<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Linux C open()</title>
      <link href="/2018/04/06/Linux-C-open%E5%87%BD%E6%95%B0/"/>
      <url>/2018/04/06/Linux-C-open%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>1、文件描述符</p><p>文件描述符在形式上是一个非负整数。实际上，它是一个索引值，指向内核为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现有文件或者创建一个新文件时，内核向进程返回一个文件描述符。。</p><a id="more"></a><h6 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span>, write, fcntl, close, link, <span class="built_in">stat</span>, <span class="built_in">umask</span>, unlink, fopen</span><br></pre></td></tr></table></figure><h6 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;sys/types.h&gt;   </span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;    </span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br></pre></td></tr></table></figure><h6 id="函数原型"><a href="#函数原型" class="headerlink" title="函数原型"></a>函数原型</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int open(const char * pathname, int flags);   /*打开现有文件*/</span><br><span class="line">int open(const char * pathname, int flags, mode_t mode);    /*文件不存在，则创建*/</span><br></pre></td></tr></table></figure><p>open()如果执行出错，则返回-1,否则返回，文件描述符。</p><h6 id="第一个参数为文件路径"><a href="#第一个参数为文件路径" class="headerlink" title="第一个参数为文件路径"></a>第一个参数为文件路径</h6><p>参数pathname 是指向欲打开的文件路径字符串首地址。</p><h6 id="第二个参数为文件打开方式"><a href="#第二个参数为文件打开方式" class="headerlink" title="第二个参数为文件打开方式"></a>第二个参数为文件打开方式</h6><p><img src="http://o6lvajvx3.bkt.clouddn.com/second_falg" alt="flag"></p><h6 id="第三个参数为创建新文件时，需要设置的文件权限mode"><a href="#第三个参数为创建新文件时，需要设置的文件权限mode" class="headerlink" title="第三个参数为创建新文件时，需要设置的文件权限mode"></a>第三个参数为创建新文件时，需要设置的文件权限mode</h6><p><img src="http://o6lvajvx3.bkt.clouddn.com/three_flag.png" alt="flag2"></p><h6 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;errno.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/stat.h&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#define SIZE 50</span></span><br><span class="line">//定义flags:只写，文件不存在那么就创建，文件长度戳为0</span><br><span class="line"><span class="comment">#define FLAGS O_WRONLY | O_CREAT | O_TRUNC</span></span><br><span class="line">//创建文件的权限，用户读、写、执行、组读、执行、其他用户读、执行</span><br><span class="line"><span class="comment">#define MODE S_IRWXU | S_IXGRP | S_IROTH | S_IXOTH  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">        const char * pathname;</span><br><span class="line">        int fd; //文件描述符</span><br><span class="line">        char pname[SIZE];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"please input the pathnaem,less than 20 char\n"</span>);</span><br><span class="line">        scanf(<span class="string">"%s"</span>,pname);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,pname);</span><br><span class="line">        pathname = pname;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((fd = open(pathname,FLAGS,MODE)) == -1)&#123;</span><br><span class="line">                perror(<span class="string">"open error!\n"</span>);</span><br><span class="line">                <span class="built_in">return</span> 0;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"open file successful!\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"fd = %d\n"</span>,fd);</span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Linux -C </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux bc 进制转换</title>
      <link href="/2018/03/28/Linux-bc-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
      <url>/2018/03/28/Linux-bc-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<p>bc命令是一种支持任意精度的交互执行的计算器语言，可以很方便的进行整数，浮点数运算。</p><a id="more"></a><h4 id="运算并设置小数精度"><a href="#运算并设置小数精度" class="headerlink" title="运算并设置小数精度"></a>运算并设置小数精度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"scale=2;1/3"</span> | bc</span><br><span class="line">.333</span><br></pre></td></tr></table></figure><p>参数<code>scale=</code>用来设置小数位数</p><h4 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"obase=2;9"</span> | bc</span><br><span class="line">1001</span><br></pre></td></tr></table></figure><p>执行结果为1010，未指定待转换数进制形式时默认为10进制，例如此处的9。参数<code>obase</code>表示转换后形式，此处为<code>2</code>,表示用二进制形式输出显示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"obase=10;ibase=2;1001"</span> | bc</span><br><span class="line">9</span><br></pre></td></tr></table></figure><p>执行结果为9，参数<code>obase</code>表示转换后形式（参数值可以2,8,10,16），参数<code>ibase</code>表示转换前形式（参数值可以2,8,10,16）。</p><h4 id="计算平方根并设置结果精度"><a href="#计算平方根并设置结果精度" class="headerlink" title="计算平方根并设置结果精度"></a>计算平方根并设置结果精度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"scale=7;sqrt(11)"</span> | bc</span><br><span class="line">3.3166247</span><br></pre></td></tr></table></figure><p><a href="http://man.linuxde.net/bc" target="_blank" rel="noopener">参考链接</a></p>]]></content>
      
      
        <tags>
            
            <tag> -Linux-工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu_17.10&#39;s backgrounds</title>
      <link href="/2018/03/16/my-backgrounds/"/>
      <url>/2018/03/16/my-backgrounds/</url>
      <content type="html"><![CDATA[<p><img src="http://o6lvajvx3.bkt.clouddn.com/backgroundsVoss_by_fortuneblues.jpg" alt="Voss"></p><a id="more"></a><p><img src="http://o6lvajvx3.bkt.clouddn.com/backgroundsHeadstock_by_Bernhard_Hanakam.jpg" alt="Headstock"></p><p><img src="http://o6lvajvx3.bkt.clouddn.com/backgroundsGrand_Canyon_North_Rim_by_Rihards_Vilks.jpg" alt="Grand_Canyon_North_Rim"></p><p><img src="http://o6lvajvx3.bkt.clouddn.com/backgroundsLondon_Eye_by_Paul_Daniell.jpg" alt="London_Eye"></p><p><img src="http://o6lvajvx3.bkt.clouddn.com/backgroundsMore_Kamikochi_by_mendhak.jpg" alt="More_Kamikochi"></p>]]></content>
      
      
        <tags>
            
            <tag> -Backgrounds </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>问题:The selected build of GDB does not support Python</title>
      <link href="/2018/01/29/%E9%97%AE%E9%A2%98-The-selected-build-of-GDB-does-not-support-Python/"/>
      <url>/2018/01/29/%E9%97%AE%E9%A2%98-The-selected-build-of-GDB-does-not-support-Python/</url>
      <content type="html"><![CDATA[<p>使用中发现Qtcreator调试出现“The selected build of GDB does not support Python scripting.It cannot be used in Qt Creator.”<br>环境：debian 9 + qt 5.6.1</p><a id="more"></a><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gdb-multiarch</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> -Qt </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>stm32中断方式延时</title>
      <link href="/2018/01/29/stm32%E4%B8%AD%E6%96%AD%E6%96%B9%E5%BC%8F%E5%BB%B6%E6%97%B6/"/>
      <url>/2018/01/29/stm32%E4%B8%AD%E6%96%AD%E6%96%B9%E5%BC%8F%E5%BB%B6%E6%97%B6/</url>
      <content type="html"><![CDATA[<p>Systic定时器是一个24位倒计数定时器，当计数到0时，则从RELOAD寄存器中自动重装载定时初值，开始新一轮计数。只要不把SysTic控制及状态寄存器中的使能位清除，定时器就会一直运行，并且在睡眠模式下也可工作。</p><a id="more"></a><h4 id="位于core-cm3-h中的定时器实现方式"><a href="#位于core-cm3-h中的定时器实现方式" class="headerlink" title="位于core_cm3.h中的定时器实现方式"></a>位于core_cm3.h中的定时器实现方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @brief  Initialize and start the SysTick counter and its interrupt.</span><br><span class="line"> *</span><br><span class="line"> * @param   ticks   number of ticks between two interrupts</span><br><span class="line"> * @<span class="built_in">return</span>  1 = failed, 0 = successful</span><br><span class="line"> *</span><br><span class="line"> * Initialise the system tick timer and its interrupt and start the</span><br><span class="line"> * system tick timer / counter <span class="keyword">in</span> free running mode to generate</span><br><span class="line"> * periodical interrupts.</span><br><span class="line"> */</span><br><span class="line">static __INLINE uint32_t SysTick_Config(uint32_t ticks)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (ticks &gt; SysTick_LOAD_RELOAD_Msk)  <span class="built_in">return</span> (1);            /* Reload value impossible */</span><br><span class="line"></span><br><span class="line">  SysTick-&gt;LOAD  = (ticks &amp; SysTick_LOAD_RELOAD_Msk) - 1;      /* <span class="built_in">set</span> reload register */</span><br><span class="line">  NVIC_SetPriority (SysTick_IRQn, (1&lt;&lt;__NVIC_PRIO_BITS) - 1);  /* <span class="built_in">set</span> Priority <span class="keyword">for</span> Cortex-M0 System Interrupts */</span><br><span class="line">  SysTick-&gt;VAL   = 0;                                          /* Load the SysTick Counter Value */</span><br><span class="line">  SysTick-&gt;CTRL  = SysTick_CTRL_CLKSOURCE_Msk |</span><br><span class="line">                   SysTick_CTRL_TICKINT_Msk   |</span><br><span class="line">                   SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */</span><br><span class="line">  <span class="built_in">return</span> (0);                                                  /* Function successful */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用SysTic定时器，并初始化为1ms中断一次"><a href="#调用SysTic定时器，并初始化为1ms中断一次" class="headerlink" title="调用SysTic定时器，并初始化为1ms中断一次"></a>调用SysTic定时器，并初始化为1ms中断一次</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SysTic_Config(SystemCroeClock/1000);</span><br></pre></td></tr></table></figure><h4 id="定义外部变量，并实现中断服务函数"><a href="#定义外部变量，并实现中断服务函数" class="headerlink" title="定义外部变量，并实现中断服务函数"></a>定义外部变量，并实现中断服务函数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">static uint32_t TimingDelay;</span><br><span class="line"></span><br><span class="line">void SysTick_Handler(void)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(TimingDelay != 0x00)</span><br><span class="line">  &#123;</span><br><span class="line">    TimingDelay--;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现中断延时"><a href="#实现中断延时" class="headerlink" title="实现中断延时"></a>实现中断延时</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">void Delay(uint32_t nTime)</span><br><span class="line">&#123;</span><br><span class="line">  TimingDelay = nTime;</span><br><span class="line">  <span class="keyword">while</span>(TimingDelay != 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> -Stm32 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux jlink STM32可执行文件下载</title>
      <link href="/2018/01/28/linux-jlink-STM32%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/2018/01/28/linux-jlink-STM32%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
      <content type="html"><![CDATA[<h3 id="进入SEGGER官网下载JLink的linux驱动"><a href="#进入SEGGER官网下载JLink的linux驱动" class="headerlink" title="进入SEGGER官网下载JLink的linux驱动"></a>进入SEGGER官网下载JLink的linux驱动</h3><h3 id="启动JLinuxExe"><a href="#启动JLinuxExe" class="headerlink" title="启动JLinuxExe"></a>启动JLinuxExe</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /usr/bin/JLinkExe</span><br></pre></td></tr></table></figure><h3 id="选择目标开发板"><a href="#选择目标开发板" class="headerlink" title="选择目标开发板"></a>选择目标开发板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">J-Link&gt; device stm32f103rc</span><br></pre></td></tr></table></figure><h3 id="下载待烧录文件"><a href="#下载待烧录文件" class="headerlink" title="下载待烧录文件"></a>下载待烧录文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">J-Link&gt; loadbin ./led.hex 0</span><br></pre></td></tr></table></figure><h6 id="目标接口选择SWD"><a href="#目标接口选择SWD" class="headerlink" title="目标接口选择SWD"></a>目标接口选择SWD</h6>]]></content>
      
      
        <tags>
            
            <tag> -Stm32 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C</title>
      <link href="/2018/01/27/C/"/>
      <url>/2018/01/27/C/</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main(void) &#123;</span><br><span class="line">puts(<span class="string">"!!!Hello World!!!"</span>); /* prints !!!Hello World!!! */</span><br><span class="line"><span class="built_in">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> -C </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>stm32</title>
      <link href="/2018/01/27/stm32/"/>
      <url>/2018/01/27/stm32/</url>
      <content type="html"><![CDATA[]]></content>
      
      
        <tags>
            
            <tag> -Stm32 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux</title>
      <link href="/2018/01/27/linux/"/>
      <url>/2018/01/27/linux/</url>
      <content type="html"><![CDATA[]]></content>
      
      
        <tags>
            
            <tag> -Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>test</title>
      <link href="/2018/01/27/test/"/>
      <url>/2018/01/27/test/</url>
      <content type="html"><![CDATA[]]></content>
      
      
        <tags>
            
            <tag> -Test </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>Resume</title>
      <link href="/resume/index.html"/>
      <url>/resume/index.html</url>
      <content type="html"><![CDATA[<h1 id="王小二-wangxiaoer-gmail-com"><a href="#王小二-wangxiaoer-gmail-com" class="headerlink" title="王小二(wangxiaoer#gmail.com)"></a>王小二(wangxiaoer#gmail.com)</h1><h2 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h2><ul><li>本科/XXX大学(20XX.9-20XX.7)/计算机科学与技术</li><li>工作年限：2年</li><li>技术博客：<a href="http://xxxxx.com" target="_blank" rel="noopener">http://xxxxx.com</a></li><li>地点：北京</li></ul><h2 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h2><h3 id="五道口宇宙中心"><a href="#五道口宇宙中心" class="headerlink" title="五道口宇宙中心"></a>五道口宇宙中心</h3><h4 id="XXXX项目（2013-10-至今）"><a href="#XXXX项目（2013-10-至今）" class="headerlink" title="XXXX项目（2013.10-至今）"></a>XXXX项目（2013.10-至今）</h4><ul><li>XXXXXXXXXXXXXXXXX</li><li>XXXXXXXXXXXXXXXXXX</li><li>XXXXXXX</li><li>XXXXXXXXXXXXXXXXXXXXXX</li></ul><h2 id="技能列表"><a href="#技能列表" class="headerlink" title="技能列表"></a>技能列表</h2><p>熟悉：Android/Java<br>了解：C#/WP，Python，HTML, Markdown等</p>]]></content>
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>timeline</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
